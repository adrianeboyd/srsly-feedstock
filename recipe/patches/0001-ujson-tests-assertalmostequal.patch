diff --git a/srsly/tests/ujson/test_ujson.py b/srsly/tests/ujson/test_ujson.py
index 38facec..a3a0b34 100644
--- a/srsly/tests/ujson/test_ujson.py
+++ b/srsly/tests/ujson/test_ujson.py
@@ -752,25 +752,25 @@ class UltraJSONTests(unittest.TestCase):
         self.assertRaises(ValueError, ujson.decode, input)
 
     def test_decodeFloatingPointAdditionalTests(self):
-        self.assertEqual(-1.1234567893, ujson.loads("-1.1234567893"))
-        self.assertEqual(-1.234567893, ujson.loads("-1.234567893"))
-        self.assertEqual(-1.34567893, ujson.loads("-1.34567893"))
-        self.assertEqual(-1.4567893, ujson.loads("-1.4567893"))
-        self.assertEqual(-1.567893, ujson.loads("-1.567893"))
-        self.assertEqual(-1.67893, ujson.loads("-1.67893"))
-        self.assertEqual(-1.7893, ujson.loads("-1.7893"))
-        self.assertEqual(-1.893, ujson.loads("-1.893"))
-        self.assertEqual(-1.3, ujson.loads("-1.3"))
-
-        self.assertEqual(1.1234567893, ujson.loads("1.1234567893"))
-        self.assertEqual(1.234567893, ujson.loads("1.234567893"))
-        self.assertEqual(1.34567893, ujson.loads("1.34567893"))
-        self.assertEqual(1.4567893, ujson.loads("1.4567893"))
-        self.assertEqual(1.567893, ujson.loads("1.567893"))
-        self.assertEqual(1.67893, ujson.loads("1.67893"))
-        self.assertEqual(1.7893, ujson.loads("1.7893"))
-        self.assertEqual(1.893, ujson.loads("1.893"))
-        self.assertEqual(1.3, ujson.loads("1.3"))
+        self.assertAlmostEqual(-1.1234567893, ujson.loads("-1.1234567893"))
+        self.assertAlmostEqual(-1.234567893, ujson.loads("-1.234567893"))
+        self.assertAlmostEqual(-1.34567893, ujson.loads("-1.34567893"))
+        self.assertAlmostEqual(-1.4567893, ujson.loads("-1.4567893"))
+        self.assertAlmostEqual(-1.567893, ujson.loads("-1.567893"))
+        self.assertAlmostEqual(-1.67893, ujson.loads("-1.67893"))
+        self.assertAlmostEqual(-1.7893, ujson.loads("-1.7893"))
+        self.assertAlmostEqual(-1.893, ujson.loads("-1.893"))
+        self.assertAlmostEqual(-1.3, ujson.loads("-1.3"))
+
+        self.assertAlmostEqual(1.1234567893, ujson.loads("1.1234567893"))
+        self.assertAlmostEqual(1.234567893, ujson.loads("1.234567893"))
+        self.assertAlmostEqual(1.34567893, ujson.loads("1.34567893"))
+        self.assertAlmostEqual(1.4567893, ujson.loads("1.4567893"))
+        self.assertAlmostEqual(1.567893, ujson.loads("1.567893"))
+        self.assertAlmostEqual(1.67893, ujson.loads("1.67893"))
+        self.assertAlmostEqual(1.7893, ujson.loads("1.7893"))
+        self.assertAlmostEqual(1.893, ujson.loads("1.893"))
+        self.assertAlmostEqual(1.3, ujson.loads("1.3"))
 
     def test_ReadBadObjectSyntax(self):
         input = '{"age", 44}'
